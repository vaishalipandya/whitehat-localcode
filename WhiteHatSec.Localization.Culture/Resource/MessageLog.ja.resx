<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthenticationFailed" xml:space="preserve">
    <value>認証に失敗しました！</value>
  </data>
  <data name="AuthenticationFailedPleaseEnterCorrectCredential" xml:space="preserve">
    <value>認証に失敗しました！正しい資格情報を入力してください。</value>
  </data>
  <data name="AuthenticationFailedPleaseEnterCorrectServerDetail" xml:space="preserve">
    <value>認証に失敗しました！正しいサーバーの詳細を入力してください。</value>
  </data>
  <data name="BrowseFile" xml:space="preserve">
    <value>ブラウズファイル</value>
  </data>
  <data name="ConnectionTimeout" xml:space="preserve">
    <value>接続タイムアウト！</value>
  </data>
  <data name="EnterAValidURL" xml:space="preserve">
    <value>有効なURLを入力してください。</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>エラーメッセージ</value>
  </data>
  <data name="FailedToParseJson" xml:space="preserve">
    <value>JSONの解析に失敗しました。</value>
  </data>
  <data name="FailedToPostQuestion" xml:space="preserve">
    <value>質問を投稿することができませんでした。</value>
  </data>
  <data name="FailedToUploadProject" xml:space="preserve">
    <value>プロジェクトのアップロードに失敗しました。</value>
  </data>
  <data name="FileIsEmpty" xml:space="preserve">
    <value>ファイルは空です。</value>
  </data>
  <data name="ImportProperJsonFile" xml:space="preserve">
    <value>適切なJSONファイルをインポートします。</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>メッセージ</value>
  </data>
  <data name="NotAbleToMatchLineAndMethod" xml:space="preserve">
    <value>ラインと方法に一致することができません。</value>
  </data>
  <data name="NotAbleToMatchLineButAbleToFindMatchForMethod" xml:space="preserve">
    <value>行に一致することができません。しかし、この方法の一致を見つけることができます。</value>
  </data>
  <data name="PleaseEnterCredentialDetail" xml:space="preserve">
    <value>資格の詳細を入力してください。</value>
  </data>
  <data name="PleaseEnterQuestion" xml:space="preserve">
    <value>質問を入力してください。</value>
  </data>
  <data name="PleaseEnterServerDetail" xml:space="preserve">
    <value>サーバーの詳細を入力してください。</value>
  </data>
  <data name="PleaseEnterServerToUploadProject" xml:space="preserve">
    <value>プロジェクトをアップロードするには、サーバーを入力してください。</value>
  </data>
  <data name="ProjectIsUploadedSucessfully" xml:space="preserve">
    <value>プロジェクトが首尾よくアップロードされます。</value>
  </data>
  <data name="QuestionIsPosted" xml:space="preserve">
    <value>質問は正常に投稿されています。</value>
  </data>
  <data name="RequireToBrowseFile" xml:space="preserve">
    <value>ファイルを閲覧するために必要です。</value>
  </data>
  <data name="SASTVulnerabilityWarning" xml:space="preserve">
    <value>SASTの脆弱性を警告</value>
  </data>
  <data name="SelectAnApp" xml:space="preserve">
    <value>アンアプリを選択</value>
  </data>
  <data name="SelectApp" xml:space="preserve">
    <value>選択アプリ</value>
  </data>
  <data name="SelectedFilenameIsDifferentThenRowPointedFile" xml:space="preserve">
    <value>選択されたファイル名は、次に尖ったファイルを行異なります</value>
  </data>
  <data name="SelectToDateGreaterThanFromDate" xml:space="preserve">
    <value>日付からより大きいの日付に選択</value>
  </data>
  <data name="SentinelIDEPlugin" xml:space="preserve">
    <value>センチネルIDEプラグイン</value>
  </data>
  <data name="SentinelLoginRequired" xml:space="preserve">
    <value>センチネルログインが必要です。</value>
  </data>
  <data name="ThereIsNoProjectToUpload" xml:space="preserve">
    <value>アップロードする何のプロジェクトがありません。</value>
  </data>
  <data name="VulnsFound" xml:space="preserve">
    <value>脆弱性が見つかりました</value>
  </data>
  <data name="Manage Vulnerabilities" xml:space="preserve">
    <value>脆弱性を管理する</value>
  </data>
  <data name="EmptyorInvalidUrl" xml:space="preserve">
    <value>URLが空または無効です</value>
  </data>
</root>